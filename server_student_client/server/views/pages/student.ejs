<!DOCTYPE html>
<html lang="en">
<head>
	<% include ../partials/head %>
</head>
<body onload="initSketch()">
	<script type="text/javascript">
		console.log("inside scrupt");
		// init self id
		window.SELF_EASY_ID = "";

		function resetLocalStorageKeys(keys){
			keys.forEach(function(key, index){
				localStorage.removeItem(key);
			});
		}

		easyrtc.setStreamAcceptor(function(easyrtcId, stream){
			var audio = $("#callerAudio");
			easyrtc.setVideoObjectSrc(audio, stream);
		});

		function openSketchModal(){

		}

		// function called when student connects successfully
		function loginSuccess(easyrtcId){
			resetLocalStorageKeys(Array("SELF_ID"));
			localStorage.setItem("SELF_ID", easyrtcId);

			// hide connect button and form 
			$("#connect-container").css({display: "none"});

			// get rooms in application
			getRooms();
		}

		// function called when student's attempt to connect fails
		function loginFailure(errorCode, message){
			easyrtc.showError(errorCode, message);
		}

		function sendCallerInfoSuccess(msgType, msgBody){
	  		console.log("call request message was sent ", msgType, msgBody);
	  	}
		function sendCallerInfoFailure(errorCode, errorText){
		  console.log("error sending call request info ", errorText);
		}

		function callLecturerSuccess(otherCaller, mediaType){
			console.log("call req SUCCESS");

			// create and enable sketch button which enables a modal on click
			var button = $('<button/>', {
        		text: "Sketch", 
        		class: "btn btn-sm btn-default",
        		id: "sketch-button-" + roomName,
        		click: function () { openSketchModal(); }
    		});
    		console.log("AFTER BUTTON CREATION");
    		// set modal call attributes
    		button.attr("data-toggle", "modal");
    		button.attr("data-target", "#sketch-modal");
    		console.log("Button with attributes ", button);
			//$("#room-article-"+ roomName +  " div:last-child span#call-btn-span").after(button);

			// show modal dynamically
			//$('#sketch-modal').modal('show');

			// hide group list and show sketch modal
			$(document).css({overflow: "hidden"});
			$(".sponsor-content-bg").css({display: "none"});
			$(".canvas-container").css({padding: 0});
			$("#main-container").css({paddingTop: "0px"});
			$("#sketch-container").css({display: "block"});
			disableScroll();
		}

		function callLecturerFailure(errorCode, errorText){
			console.log("call req FAILURE");
		}	

		function callLecturerAccepted(accepted, caller){
			console.log("INSIDE CALL ACCEPTED");
			//easyrtc.hangupAll();
			if( !accepted ) {
            	easyrtc.showError("CALL-REJECTED", "Sorry, your call to " + easyrtc.idToName(caller) + " was rejected");
        	}
		}

		function makeCallToLecturer(roomName){
			var rsltArr = easyrtc.usernameToIds("Lecturer", roomName);
			console.log("LECTURER ID ", rsltArr);
			easyrtc.call(rsltArr[0].easyrtcid, callLecturerSuccess, 
				callLecturerFailure, callLecturerAccepted);
		}

		function roomJoinSuccess(roomName){
			console.log("you have joined room " + roomName);
			// debugging lecturer id
			console.log("LECTURER ID ", easyrtc.usernameToIds("Lecturer", roomName));
		}

		function roomJoinFailure(errorCode, errorText){
			alert("you could not join the room");
		}
		// handle when join button is clicked
		// send request to lecturer
		function handleJoinClick(eventData){
			var roomName = eventData.data;
			console.log("HANDLE JOIN CLICK: roomname, ", roomName);
			easyrtc.joinRoom(roomName, null, roomJoinSuccess, roomJoinFailure);


			// create call button dynamically 
			var button = $('<button/>', {
        		text: "Call",
        		class: "btn btn-sm btn-default",
        		id: "call-button-" + roomName,
        		click: function () { makeCallToLecturer(roomName); }
    		});
    		// handle the first case of room-article when join clicked
    		if(localStorage.getItem("roomCount") == 1){
    			$("#room-article div:last-child span#call-btn-span").after(button);
    		} else {
    			$("#room-article div:last-child span#call-btn-span").after(button);
    			$("#room-article-"+ roomName +  " div:last-child span#call-btn-span").after(button);
    		}
			
		}

		function getRoomListSuccess(roomList){
			// now list rooms in view
			$(".sponsor-content-bg").css({"display":"block", marginTop: "-100px"});
			localStorage.setItem("roomCount", Object.keys(roomList).length);
			console.log("AFTER SETTING ROOM COUNT: ", localStorage.getItem("roomCount"));
			console.log("roomLust", roomList);
          	var rooms = $("#rooms");
          	rooms.innerHTML = '';
          	//  clone copies if more than 1
          	var roomsContainer;
      		// show no rooms message if none available
      		if(Object.keys(roomList).length < 1){
      			$("#no-room").css({display: "block"});
      		} else {
      			$("#room-article").css({display: "block"});

	      		var count = 0;
	      		var previousArticle;
	      		for(roomName in roomList){
	      			if(count === 0){
	      				// match the button and add listener
	      				$("#room-article div:last-child button").click(roomName, handleJoinClick);
	      				count += 1;
	      			} else {
	      				var roomArticle = $("#room-article").clone(false); // dont add event handlers
	      				// change id to match, then add click listener to button
	      				roomArticle.attr("id", "room-article-" + roomName);
	      				previousArticle = $("#room-article-"+roomName);
	      				
	      				var query = "#" + roomArticle.attr("id") + " div:last-child button";
	      				console.log("DIDNT MATHC? ", query, $(query));
	      				$("#rooms-list-container").append(roomArticle);
	      				// added after append, to take effect
	      				$(query).click(roomName, handleJoinClick);
	      				count += 1;
	      			}
	      		}
	          	
	          	// assign room names to blocks
	          	var count = 0;
			  	for(roomName in roomList) {
		  			$(".room-name").each(function(i){
	        			if(i === count){
	        				console.log("SETTING ROOM NAME: ", roomName)
	        				$(this).text(roomName);
	        			}
	        		});
	        		count += 1;
	          	}
      		}
      		
		}

		function getRoomListFailure(errorCode, errorText){
			console.log("failed getting room list ", errorText);
		}

		function seeOtherDisabledStudents(roomName, occupants, isPrimary){
			var otherStudents = document.getElementById("other-students");
			occupants.forEach(function(occupant, index){
				// TODO: make disabled
				otherStudents.append("<li>" + occupant + "</li>")
			});
		}

		function makeCallRequest(lecturerId){
			// TODO: obtain lecturer Ã­d
		}
		// using recursion to halt till user is connected to server
		function getRooms(){
			easyrtc.getRoomList(getRoomListSuccess, getRoomListFailure);	
		}

		function roomOwnerListener(easyrtcId, msgType, msgData, targeting){
			console.log("ROOM OWNER event received: ", msgType, msgData, targeting);
			// set gloabal lecturer easyrtcid
			localStorage.setItem("LECTURER_ID", easyrtcId);
		}

		function connect(){
			console.log("connect clicked");
			// audio only
			easyrtc.enableVideo(false);
    		easyrtc.enableVideoReceive(false);
    		easyrtc.enableDebug(true);
    		// listen for whenever room_owner message is received
    		easyrtc.setPeerListener(roomOwnerListener, "room_owner");
    		easyrtc.initMediaSource(
        		function(){        // success callback
            		easyrtc.connect("easyrtc.AskAloud", loginSuccess, loginFailure);
        		},
       	 		function(errorCode, errmesg){
            		easyrtc.showError(errorCode, errmesg);
        		}	// failure callback
        	);
        	if ( !easyrtc.setUsername($("#username").val()) ){
       			alert("bad user name");
       			easyrtc.disconnect();
       		}
		}

		function connectAndRequest(){
			connect();
		};

		function preventDefault(e) {
		  e = e || window.event;
		  if (e.preventDefault)
		      e.preventDefault();
		  e.returnValue = false;  
		}

		function preventDefaultForScrollKeys(e) {
		    if (keys[e.keyCode]) {
		        preventDefault(e);
		        return false;
		    }
		}

		function disableScroll() {
		  if (window.addEventListener) // older FF
		      window.addEventListener('DOMMouseScroll', preventDefault, false);
		  window.onwheel = preventDefault; // modern standard
		  window.onmousewheel = document.onmousewheel = preventDefault; // older browsers, IE
		  window.ontouchmove  = preventDefault; // mobile
		  document.onkeydown  = preventDefaultForScrollKeys;
		}


	</script>
	<header>
		<% include ../partials/header %>
	</header>
	

	<main style="min-height:600px;padding-top:150px;" class="container" id="main-container">

		<video id="callerAudio"></video>

		<div class="connect-btn" id="connect-container">
			<div class="form-group">
    			<label for="username">Username</label>
    			<input type="text" class="form-control" id="username" placeholder="Enter username (one word)">
  			</div>
			<button id="connect-btn" onclick="connectAndRequest()" class="btn btn-primary">Connect</button>
		</div>

		<div class="" id="sketch-container">	
    	  	<div class="container canvas-container">
		<div class="tools-container">
			Choose Color
			<ul class="color-box-list">
				<li class="color-box" id="green" onclick="color(this)"></li>
				<li class="color-box" id="blue" onclick="color(this)"></li>
				<li class="color-box" id="red" onclick="color(this)"></li>
		        <li class="color-box" id="yellow" onclick="color(this)"></li>
		        <li class="color-box" id="orange" onclick="color(this)"></li>
		        <li class="color-box" id="black" onclick="color(this)"></li>
			</ul>
		</div>
		
		<div class="tools-container">
			Eraser
			<ul class="color-box-list">
				<li class="color-box" id="white" onclick="color(this)"></li>
			</ul>
		</div>

		<canvas id="can" width="500" height="400" tabindex="0"></canvas>

		<div class="form-group">
        	<button id="clr" onclick="erase()" class="btn btn-default">Clear</button>	
		</div>
		
	</div>
    	  	</div>

		<div class="sponsor-content-bg">
    	  <div class="container">

        	<div class="content-col-container" id="content-col-container">
              <div class="content-header">
                <h4> Current Rooms</h4>
                <div id="no-room">
                	No Rooms Available
                </div>
              </div>
              <div class="container" id="rooms-list-container">
              	<div class="event-article col-md-3" style="margin-left: 20px;" id="room-article">
                    <div class="event-article-header red-header">
                        <h5>Category</h5>
                    </div>
                    <div class="event-article-img">
                        <img src="assets/images/default.png" alt=""/>
                    </div>
                    <div class="event-article-title">
                        <h4 class="room-name"> Room Name Goes Here</h4>
                    </div>
                    <div class="event-article-content">
                        <p>
                            Some random words to make you join this room
                            Furthermore, we really need you to come in your numbers
                        </p>
                    </div>
                    <div class="event-article-extras">
                        <button class="btn btn-sm btn-default join-btn" id="">
                            <span class="glyphicon glyphicon-plus"></span>
                            Join
                        </button>
                        <span class="pull-right event-call-container" id="call-btn-span">
                            <!--  <button class="btn btn-sm btn-default" id="">
                                 <span class="glyphicon glyphicon-share"></span>
                                 Call
                             </button> -->
                             
                        </span>
                    </div>
                </div>
              </div>
            </div>
          </div>
        </div>


	</main>

	<!-- Modal -->
	<div class="modal fade" id="sketch-modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" style="margin-top:60px;">
	  <div class="modal-dialog" role="document">
	    <div class="modal-content">
	      <div class="modal-header">
	        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
	        <h4 class="modal-title" id="myModalLabel">Sketch</h4>
	      </div>
	      <div class="modal-body">
	        <div class="container">
				<div class="tools-container">
					Choose Color
					<ul class="color-box-list">
						<li class="color-box" id="green" onclick="color(this)"></li>
						<li class="color-box" id="blue" onclick="color(this)"></li>
						<li class="color-box" id="red" onclick="color(this)"></li>
				        <li class="color-box" id="yellow" onclick="color(this)"></li>
				        <li class="color-box" id="orange" onclick="color(this)"></li>
				        <li class="color-box" id="black" onclick="color(this)"></li>
					</ul>
				</div>
		
				<div class="tools-container">
					Eraser
					<ul class="color-box-list">
						<li class="color-box" id="white" onclick="color(this)"></li>
					</ul>
				</div>

				<canvas id="can" width="500" height="400"></canvas>

				<div class="form-group">
					<button id="btn" onclick="save()" class="btn btn-primary">Save</button>
		        	<button id="clr" onclick="erase()" class="btn btn-default">Clear</button>	
				</div>
		
	  		</div>
	      </div>
	      <div class="modal-footer">
	        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
	        <button type="button" class="btn btn-primary">Save changes</button>
	      </div>
	    </div>
	  </div>
	</div>

	
	<footer>
		<% include ../partials/footer %>
	</footer>

</body>

</html>