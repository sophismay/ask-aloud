<!DOCTYPE html>
<html lang="en">
<head>
	<% include ../partials/head %>
</head>
<body>
	<script type="text/javascript">
		console.log("inside scrupt");
		// init self id
		window.SELF_EASY_ID = "";

		function resetLocalStorageKeys(keys){
			keys.forEach(function(key, index){
				localStorage.removeItem(key);
			});
		}

		easyrtc.setStreamAcceptor(function(easyrtcId, stream){
			var audio = $("#callerAudio");
			easyrtc.setVideoObjectSrc(audio, stream);
		});

		//TTK: create just one room which can embed many applications
		// in this case, on lecture(created by lecturer)per application
		// ** above is other way round I think **

		// useful functions from doc, i think:
		// appObj.createRoom
		// enableDataChannel, sendPeerMessage, sendServerMessage, sendData, 
		// setApplicationName, sendDataP2P, joinRoom, setPeerListener, 
		// setServerListener, setUsername
		// supportsGetUserMedia, supportsPeerConnections
		// setCookieId, setCredential, setOnCall, setOnHangup
		// setRoomApiField: can be used to set variables, and can be listed on
		// setRoomOccupantListener, setSocketUrl

		// function called when student connects successfully
		function loginSuccess(easyrtcId){
			window.ŚELF_EASY_ID = easyrtcId;
			
			resetLocalStorageKeys(Array("SELF_ID"));
			console.log("undefiend localStorage ", localStorage.getItem("sdis"));
			localStorage.setItem("SELF_ID", easyrtcId);
			var whoAmI = document.getElementById("whoami");
			whoAmI.innerHTML = "I am " + easyrtcId;
			console.log(easyrtcId + " is actually " + easyrtc.idToName(easyrtcId));
			console.log("connected with SELF_EASY_ID: ", window.SELF_EASY_ID);
			console.log("local storage: ", localStorage.getItem("SELF_ID"));

			// get rooms in application
			getRooms();

		}

		// function called when student's attempt to connect fails
		function loginFailure(errorCode, message){
			easyrtc.showError(errorCode, message);
		}

		function sendCallerInfoSuccess(msgType, msgBody){
	  		console.log("call request message was sent ", msgType, msgBody);
	  	}
		function sendCallerInfoFailure(errorCode, errorText){
		  console.log("error sending call request info ", errorText);
		}

		function callLecturerSuccess(){
			console.log("call req SUCCESS");
		}

		function callLecturerFailure(){
			console.log("call req FAILURE");
		}	

		function callLecturerAccepted(accepted, caller){
			console.log("INSIDE CALL ACCEPTED");
			easyrtc.hangupAll();
			if( !accepted ) {
            	easyrtc.showError("CALL-REJECTED", "Sorry, your call to " + easyrtc.idToName(caller) + " was rejected");
            	enable('otherClients');
        	}
		}

		function makeCallToLecturer(roomName){
			//alert("make call called");
			// send to lecturer event "call_request", then make call
			//easyrtc.sendPeerMessage(localStorage.getItem("LECTURER_ID"), "call_request", {callerId: localStorage.getItem("SELF_ID")}, 
	  	  	//	sendCallerInfoSuccess, sendCallerInfoFailure);
			//easyrtc.call(localStorage.getItem("LECTURER_ID"), 
			//	callLecturerSuccess, callLecturerFailure, callLecturerAccepted);
			var rsltArr = easyrtc.usernameToIds("Lecturer");
			console.log("LECTURER ID ", rsltArr);
			easyrtc.call(rsltArr[0].easyrtcid, callLecturerSuccess, 
				callLecturerFailure, callLecturerAccepted);
		}

		function roomJoinSuccess(roomName){
			alert("you have joined room " + roomName);
			//$("call-button-span-" + roomName).css({display: "block"});
			var jCallBtn = $("#call-button-" + roomName);
			jCallBtn.css({display: "block"});
			jCallBtn.click(makeCallToLecturer(roomName));

			// adding call here

			//makeCallToLecturer(roomName);
		}

		function roomJoinFailure(errorCode, errorText){
			alert("you could not join the room");
		}
		// handle when join button is clicked
		// send request to lecturer
		function handleJoinClick(eventData){
			var roomName = eventData.data;
			console.log("HANDLE JOIN CLICK: roomname, ", roomName);
			easyrtc.joinRoom(roomName, null, null, null);


			// create call button dynamically 
			var button = $('<button/>', {
        		text: "Call", //set text 1 to 10
        		id: 'btn_',
        		click: function () { makeCallToLecturer(roomName); }
    		});
			$("#room-article-"+ roomName +  " div:last-child span").after(button);

			//makeCallToLecturer("C205");


		}

		function getRoomListSuccess(roomList){
			// now list rooms in view
			$(".sponsor-content-bg").css({"display":"block"});
			console.log("roomLust", roomList);
          	var rooms = $("#rooms");
          	rooms.innerHTML = '';
          	//  clone copies if more than 1
          	var roomsContainer;
      		$("#room-article").css({display: "block"});
      		
      		var count = 0;
      		var previousArticle;
      		for(roomName in roomList){
      			if(count === 0){
      				// match the button and add listener
      				$("#room-article div:last-child button").click(roomName, handleJoinClick);
      				// set id for call button and its span
      				//$("#room-article div:last-child span").attr("id", "call-button-span-" + roomName);
      				//$("#call-button-span-"+roomName).css({display: "none"});
      				
      				//$("#room-article div:last-child span button").attr("id", "call-button-" + roomName);
      				count += 1;
      			} else {
      				var roomArticle = $("#room-article").clone(false); // dont add event handlers
      				// change id to match, then add click listener to button
      				roomArticle.attr("id", "room-article-" + roomName);
      				previousArticle = $("#room-article-"+roomName);
      				// set call button id and make invisible. also for its span container
      				//var callBtnId = "call-button-" + roomName;
      				//$("#room-article-"+ roomName +" div:last-child span button").attr("id", callBtnId);
      				//$(callBtnId).css({display: "block"});
      				//$("#room-article div:last-child span").attr("id", "call-button-span-" + roomName)
      				//$("#call-button-span-" + roomName).css({display: "none"});

      				//console.log("CALL BUTTON: ", $(callBtnId));
      				var query = "#" + roomArticle.attr("id") + " div:last-child button";
      				console.log("DIDNT MATHC? ", query, $(query));
      				$("#rooms-list-container").append(roomArticle);
      				//roomArticle.insertAfter(previousArticle);
      				// added after append, to take effect
      				$(query).click(roomName, handleJoinClick);
      				//$("#call-button-"+roomName).bind("click", makeCallToLecturer);
      				count += 1;
      			}
      		}
          	
          	// assign room names to blocks
          	var count = 0;
		  	for(roomName in roomList) {
            	$(".room-name").each(function(i){
            		if(i === count)
            			$(this).text(roomName);
            	});
            	count += 1;
          	}
		}

		function getRoomListFailure(errorCode, errorText){
			console.log("failed getting room list ", errorText);
		}

		function seeOtherDisabledStudents(roomName, occupants, isPrimary){
			var otherStudents = document.getElementById("other-students");
			occupants.forEach(function(occupant, index){
				// TODO: make disabled
				otherStudents.append("<li>" + occupant + "</li>")
			});
		}

		function makeCallRequest(lecturerId){
			// TODO: obtain lecturer íd
		}
		// using recursion to halt till user is connected to server
		function getRooms(){
			easyrtc.getRoomList(getRoomListSuccess, getRoomListFailure);	
		}

		function roomOwnerListener(easyrtcId, msgType, msgData, targeting){
			console.log("ROOM OWNER event received: ", msgType, msgData, targeting);
			// set gloabal lecturer easyrtcid
			localStorage.setItem("LECTURER_ID", easyrtcId);
		}

		function connect(){
			console.log("connect clicked");
			// audio only
			easyrtc.enableVideo(false);
    		easyrtc.enableVideoReceive(false);
    		easyrtc.enableDebug(true);
    		// listen for whenever room_owner message is received
    		easyrtc.setPeerListener(roomOwnerListener, "room_owner");

    		//var applicationFields = easyrtc.getApplicationFields();
    		//var connectionFields = easyrtc.getConnectionFields();
    		//console.log("connection fields: ", connectionFields);
    		//console.log("application fields: ", applicationFields);
    		// commented out because we don't care about other students in the room for now
    		//easyrtc.setRoomOccupantListener(convertListToButtons);
    		easyrtc.initMediaSource(
        		function(){        // success callback
            		easyrtc.connect("easyrtc.AskAloud", loginSuccess, loginFailure);
        		},
       	 		function(errorCode, errmesg){
            		easyrtc.showError(errorCode, errmesg);
        		}	// failure callback
        	);
		}

		function connectAndRequest(){
			connect();
		};


	</script>
	<header>
		<% include ../partials/header %>
	</header>
	<video id="callerAudio"></video>

	<main style="min-height:600px;padding-top:150px;" class="container">
		<div class="connect-btn">
			<button id="connect-btn" onclick="connectAndRequest()" class="btn btn-primary">Connect</button>
		</div>
		<div class="" id="whoami">
			
		</div>

		<div class="sponsor-content-bg">
    	  <div class="container">
        	<div class="content-col-container" id="content-col-container">
              <div class="content-header">
                <h4> Current Rooms</h4>
              </div>
              <div class="container" id="rooms-list-container">
              	<div class="event-article col-md-3" style="margin-left: 20px;" id="room-article">
                    <div class="event-article-header red-header">
                        <h5>Category</h5>
                    </div>
                    <div class="event-article-img">
                        <img src="assets/images/default.png" alt=""/>
                    </div>
                    <div class="event-article-title">
                        <h4 class="room-name"> Room Name Goes Here</h4>
                    </div>
                    <div class="event-article-content">
                        <p>
                            Some random words to make you join this room
                            Furthermore, we really need you to come in your numbers
                        </p>
                    </div>
                    <div class="event-article-extras">
                        <button class="btn btn-sm btn-default join-btn" id="">
                            <span class="glyphicon glyphicon-plus"></span>
                            Join
                        </button>
                        <span class="pull-right event-call-container" id="call-btn-span">
                            <!--  <button class="btn btn-sm btn-default" id="">
                                 <span class="glyphicon glyphicon-share"></span>
                                 Call
                             </button> -->
                             
                        </span>
                    </div>
                </div>
              </div>
            </div>
          </div>
        </div>


	</main>

	<footer>
		<% include ../partials/footer %>
	</footer>

</body>

</html>