<!DOCTYPE html>
<html lang="en">
<head>
	<% include ../partials/head %>
</head>
<body>
	<script type="text/javascript">
		console.log("inside scrupt");
		// init self id
		window.SELF_EASY_ID = "";

		function resetLocalStorageKeys(keys){
			keys.forEach(function(key, index){
				localStorage.removeItem(key);
			});
		}
		//TTK: create just one room which can embed many applications
		// in this case, on lecture(created by lecturer)per application
		// ** above is other way round I think **

		// useful functions from doc, i think:
		// appObj.createRoom
		// enableDataChannel, sendPeerMessage, sendServerMessage, sendData, 
		// setApplicationName, sendDataP2P, joinRoom, setPeerListener, 
		// setServerListener, setUsername
		// supportsGetUserMedia, supportsPeerConnections
		// setCookieId, setCredential, setOnCall, setOnHangup
		// setRoomApiField: can be used to set variables, and can be listed on
		// setRoomOccupantListener, setSocketUrl

		// function called when student connects successfully
		function loginSuccess(easyrtcId){
			window.ŚELF_EASY_ID = easyrtcId;
			
			resetLocalStorageKeys(Array("SELF_ID"));
			console.log("undefiend localStorage ", localStorage.getItem("sdis"));
			localStorage.setItem("SELF_ID", easyrtcId);
			var whoAmI = document.getElementById("whoami");
			whoAmI.innerHTML = "I am " + easyrtcId;
			console.log(easyrtcId + " is actually " + easyrtc.idToName(easyrtcId));
			console.log("connected with SELF_EASY_ID: ", window.SELF_EASY_ID);
			console.log("local storage: ", localStorage.getItem("SELF_ID"));

			// get rooms in application
			getRooms();

		}

		// function called when student's attempt to connect fails
		function loginFailure(errorCode, message){
			easyrtc.showError(errorCode, message);
		}

		function getRoomListSuccess(roomList){
			// now list rooms in view
          	var rooms = document.getElementById("rooms");
          	rooms.innerHTML = '';
		  	for(roomName in roomList) {
            	console.log("saw room " + roomName);
            	var li = document.createElement("li");
            	var text = document.createTextNode(roomName);
            	li.appendChild(text);
            	rooms.appendChild(li);
          	}
          	console.log("room list: ", roomList);
		}

		function getRoomListFailure(errorCode, errorText){
			console.log("failed getting room list ", errorText);
		}

		function seeOtherDisabledStudents(roomName, occupants, isPrimary){
			var otherStudents = document.getElementById("other-students");
			occupants.forEach(function(occupant, index){
				// TODO: make disabled
				otherStudents.append("<li>" + occupant + "</li>")
			});
		}

		function makeCallRequest(lecturerId){
			// TODO: obtain lecturer íd
		}
		// using recursion to halt till user is connected to server
		function getRooms(){
			easyrtc.getRoomList(getRoomListSuccess, getRoomListFailure);	
		}

		function connect(){
			console.log("connect clicked");
			// audio only
			easyrtc.enableVideo(false);
    		easyrtc.enableVideoReceive(false);
    		easyrtc.enableDebug(true);

    		//var applicationFields = easyrtc.getApplicationFields();
    		//var connectionFields = easyrtc.getConnectionFields();
    		//console.log("connection fields: ", connectionFields);
    		//console.log("application fields: ", applicationFields);
    		// commented out because we don't care about other students in the room for now
    		//easyrtc.setRoomOccupantListener(convertListToButtons);
    		easyrtc.initMediaSource(
        		function(){        // success callback
            		easyrtc.connect("easyrtc.AskAloud", loginSuccess, loginFailure);
        		},
       	 		function(errorCode, errmesg){
            		easyrtc.showError(errorCode, errmesg);
        		}	// failure callback
        	);
		}

		//var makeCallBtn = document.getElementById("make-call-button");
		function connectAndRequest(){
			connect();
        	
        	// TODO: make call to lecturer
		};
	</script>
	<header>
		<% include ../partials/header %>
	</header>

	<main style="min-height:600px;padding-top:150px;" class="container">
		<div class="make-call-button">
			<button id="make-call-button" onclick="connectAndRequest()">Contact Lecturer</button>
		</div>
		<div class="" id="whoami">
			
		</div>

		<div id="other-students-container" class="other-students-container">
			<ul id="other-students">

			</ul>
		</div>

		<div id="rooms-container" class="rooms-container">
			<ul id="rooms">

			</ul>
		</div>

		<div class="sponsor-content-bg">
    	  <div class="container">
        	<div class="content-col-container">
              <div class="content-header">
                <h4> Current Rooms</h4>
              </div>
              <div class="container">
              	<div class="event-article col-md-3" style="margin-left: 20px;">
                    <div class="event-article-header red-header">
                        <h5>Category</h5>
                    </div>
                    <div class="event-article-img">
                        <img src="assets/images/default.png" alt=""/>
                    </div>
                    <div class="event-article-title">
                        <h4> Room Name Goes Here</h4>
                    </div>
                    <div class="event-article-content">
                        <p>
                            Some random words to make you join this room
                            Furthermore, we really need you to come in your numbers
                        </p>
                    </div>
                    <div class="event-article-extras">
                        <button class="btn btn-sm btn-default">
                            <span class="glyphicon glyphicon-plus"></span>
                            Join
                        </button>
                    </div>
                </div>
              </div>
            </div>
          </div>
        </div>


	</main>

	<footer>
		<% include ../partials/footer %>
	</footer>

</body>

</html>